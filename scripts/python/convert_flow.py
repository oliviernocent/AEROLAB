#!/usr/bin/env python3
# -*- coding: utf-8 -*-
'''
This script merges several files generated by FLOW air quality sensors.
Mass concentration of each pollutant are also computed from ppm values.

USAGE:

./convert_flow.py user_measures_YYYYMMDD_YYYMMDD.csv user_positions_YYYYMMDD_YYYMMDD.csv

'''

__author__     = "Olivier Nocent and Quentin Martinet"
__copyright__  = "Copyright 2021, Université de Reims Champagne Ardenne"
__license__    = "MIT"
__version__    = "0.0.1"
__maintainer__ = "Olivier Nocent"
__email__      = "olivier.nocent@univ-reims.fr"
__status__     = "Experimental"

from os import path
import sys
import glob
import pandas as pd
import easygui
from progress.bar import IncrementalBar
from aerolab_utils import *

if len(sys.argv) == 1:
    [measures_file, positions_file] = easygui.fileopenbox(title='FLOW files converter', msg='Select 2 FLOW files (measures, positions)', multiple=True, filetypes=[['*.csv', 'FLOW files']])
else:    
    measures_file = sys.argv[1]
    if not path.exists(measures_file):
        print('\nERROR:', measures_file, 'does not exist!\n\n')
        exit(0)

    positions_file = sys.argv[2]
    if not path.exists(positions_file):
        print('\nERROR:', positions_file, 'does not exist!\n\n')
        exit(0)

# Loads positions file to get date and location
df = pd.read_csv(positions_file)

solar_params = get_solar_data(df.loc[0, 'date'], df.loc[0, 'latitude'], df.loc[0, 'longitude'])

# Loads mesaures file
df = pd.read_csv(measures_file)

# Renames columns
df.rename(columns={'timestamp': 'Timestamp', 'date (UTC)': 'DateTime', 'pm 10 (ug/m3)': 'PM10 (µg/m3)', 'pm 2.5 (ug/m3)': 'PM2.5 (µg/m3)'}, inplace=True)

# Removes unused columns
df.drop(['NO2 (Plume AQI)'], axis=1, inplace=True)
df.drop(['VOC (Plume AQI)'], axis=1, inplace=True)
df.drop(['pm 10 (Plume AQI)'], axis=1, inplace=True)
df.drop(['pm 2.5 (Plume AQI)'], axis=1, inplace=True)

# Inserts new columns
df.insert(2, 'Period', [''] * len(df.index))
df.insert(4, 'NO2 (µg/m3)', [0] * len(df.index))

bar = IncrementalBar('Processing ' + path.basename(measures_file), max=len(df.index), suffix='%(percent)d%% - %(elapsed)ds')
for i in df.index:
    # Sets DateTime to ISO 8601 format
    df.loc[i, 'DateTime'] = df.loc[i, 'DateTime'][0:10] + 'T' + df.loc[i, 'DateTime'][11:19]
    
    # Sets the period (day/night) according to the solar sunrise and sunset hours
    current_time = time.fromisoformat(df.loc[i, 'DateTime'][11:19])
    if current_time >= solar_params['sunrise'] and current_time < solar_params['sunset']:
        df.loc[i, 'Period'] = 'Day'
    else:
        df.loc[i, 'Period'] = 'Night'

    # Computes NO2 mass concentration
    if df.loc[i, 'NO2 (ppb)'] < 0:
        df.loc[i, 'NO2 (ppb)'] = None
        df.loc[i, 'NO2 (µg/m3)'] = None
    else:
        df.loc[i, 'NO2 (µg/m3)'] = ppm_to_mass(df.loc[i, 'NO2 (ppb)'] / 1000,
                                                0,
                                                1000,
                                                46.01)

    bar.next()
bar.finish()

# Saves merged data into a single CSV file
print('Saving ' + path.basename(measures_file)[0:-4] + '.converted.csv')
df.to_csv(measures_file[0:-4] + '.converted.csv', sep=',', index=False)

